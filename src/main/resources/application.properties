#Spring DataSource
spring.jpa.database=POSTGRESQL
spring.datasource.platform=postgres
spring.datasource.url = jdbc:postgresql://${POSTGRES_URL}/${POSTGRES_DB}?sslmode=require&createDatabaseIfNotExist=true
spring.datasource.username =${POSTGRES_USERNAME}
spring.datasource.password =${POSTGRES_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver
spring.datasource.sql-script-encoding=UTF-8
server.port=${PORT:8080}

spring.datasource.tomcat.test-while-idle = true
spring.datasource.tomcat.validation-query = SELECT 1

spring.jpa.show-sql = true
spring.jpa.hibernate.ddl-auto = create-drop
spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect





#spring.datasource.url = jdbc:mysql://localhost:3306/tim18?useSSL=false&createDatabaseIfNotExist=true&serverTimezone=UTC&allowPublicKeyRetrieval=true
#spring.datasource.initialization-mode=always

#spring.datasource.username =root
#spring.datasource.password =root

#korisno ako je konekcija dugo u idle stanju
#spring.datasource.dbcp.test-while-idle = true
#spring.datasource.dbcp.validation-query = SELECT 1
spring.jackson.serialization.fail-on-empty-beans=false

#JPA-Hibernate
#spring.jpa.show-sql = true

#kreira tabele na osnovu anotacija @Entity i kada aplikacija zavrsi
#sa radom dropuje ih
#prvi put kada pokrenete program oba treba da budu otkomentarisana
#(popunice se baza podataka podacima iz skripte data.sql) nikakve podatke nemojte dodavati
#samo pokrenite i izadjite iz programa
#drugi put kada pokrenete program samo spring.datasource.initialization-mode=always zakomentarisati
#(baza ce biti popunjena podacima iz skripte i dodati podaci ce ostati u bazi i nakon gasenja programa)
#ovde mozete da dodajete sta vam treba
#ako nesto krene da pisti idite u bazu podatak i dropujte semu to bi trebalo da sredi problem
#spring.datasource.initialization-mode=always
#spring.jpa.hibernate.ddl-auto = update


#bira najbolje konvencije imenovanja za tabele i polja u bazi
#spring.jpa.hibernate.naming.strategy = org.hibernate.cfg.ImprovedNamingStrategy

#optimizacija za mysql upite
#spring.jpa.hibernate.dialect=org.hibernate.dialect.MySQLDialect
#spring.jpa.hibernate.show_sql=true
#spring.jpa.hibernate.format_sql=true

# Enable multipart uploads
#spring.servlet.multipart.enabled=true
# Threshold after which files are written to disk.
#spring.servlet.multipart.file-size-threshold=2KB
# Max file size.
#spring.servlet.multipart.max-file-size=200MB
# Max Request Size
#spring.servlet.multipart.max-request-size=215MB

#ovde se podesava putanja za sliku ove dve putanje se menjaju
#spring.resources.static-locations=classpath:/static/,file:C:\Users\Dule\Desktop\ISA-MRS\slike
#file.upload-dir=C:\Users\Dule\Desktop\ISA-MRS\slike

## File Storage Properties
# All files uploaded through the REST API will be stored in this directory
#file.upload-dir= C:/Users/Korisnik/Desktop/newest/almostlast/ISA-MRS-TIM18/Skynet/src/main/resources/static/images
#file.upload-dir= C:/Users/W10/Desktop/ISA-MRS-TIM18/Skynet/src/main/resources/static/images